name: "CI (Reusable)"

on:
  workflow_call:
    inputs:
      package-path:
        description: "Path to the package to check"
        type: string
        required: true
        default: "packages/filament_scene"
      package-name:
        description: "Name of the package to check"
        type: string
        required: true
        default: "filament_scene"

jobs:
  install:
    name: "install"
    defaults:
      run:
        working-directory: ${{ inputs.package-path }}
    runs-on: ubuntu-latest

    # Skip if job has label 'skip-[package name]'
    if: "!contains(github.event.pull_request.labels.*.name, 'ci: skip ${{ inputs.package-name }}') && !contains(github.event.head_commit.message, '[skip ${{ inputs.package-name }}]')"

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/flutter-setup
        with:
          package-path: ${{ inputs.package-path }}

  format:
    name: "format"
    defaults:
      run:
        working-directory: ${{ inputs.package-path }}
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/flutter-setup
        with:
          package-path: ${{ inputs.package-path }}

      - name: "dart format"
        run: |
          echo "Checking Dart formatting...\nFiles displayed below:"
          dart format -o none --set-exit-if-changed ./**/*.dart
          echo "No formatting issues found."

  analyze:
    name: "analyze"
    defaults:
      run:
        working-directory: ${{ inputs.package-path }}
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/flutter-setup
        with:
          package-path: ${{ inputs.package-path }}

      - name: Run analysis
        run: flutter analyze --fatal-warnings

  docs:
    name: "docs"
    defaults:
      run:
        working-directory: ${{ inputs.package-path }}
    runs-on: ubuntu-latest
    needs: [ analyze, format ]

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/flutter-setup
        with:
          package-path: ${{ inputs.package-path }}

      - name: Build Documentation
        run: |
          flutter pub global activate dartdoc
          flutter pub global run dartdoc

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: ${{ inputs.package-path }}/doc

      - name: Instructions
        run: |
          echo "To view docs, download the file above, unzip it and run the following in its folder:"
          echo "  > dart pub global activate dhttpd"
          echo "  > dart pub global run dhttpd --path ./"

  # TODO: add a `test` job
